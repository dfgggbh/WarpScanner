name: WarpScanner CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # هر روز در نیمه‌شب اجرا شود

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # کلون کردن مخزن
      - name: Checkout Repository
        uses: actions/checkout@v4

      # نصب وابستگی‌ها (مثلاً Python)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # نصب ابزارهای مورد نیاز (مثلاً WireGuard)
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard
          pip install -r requirements.txt

      # اجرای اسکریپت اسکن
      - name: Run WarpScanner
        run: |
          python warp_scanner.py --output config.wg

      # تست صحت پیکربندی
      - name: Test WireGuard Config
        run: |
          wg-quick up ./config.wg
          wg-quick down ./config.wg

      # ذخیره پیکربندی به‌عنوان Artifact
      - name: Upload Config Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wireguard-config
          path: config.wg

      # انتشار پیکربندی به یک سرور (اختیاری)
      - name: Deploy Config
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          ssh -i $DEPLOY_KEY $DEPLOY_USER@$DEPLOY_SERVER 'mkdir -p /path/to/configs'
          scp config.wg $DEPLOY_USER@$DEPLOY_SERVER:/path/to/configs/

      # ارسال اعلان در صورت موفقیت یا شکست
      - name: Notify on Discord
        if: always()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: 'Workflow for WarpScanner completed with status: {{ JOB_STATUS }}'
